// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  role          String         @default("user")
  phoneNumber   String?
  image         String?
  location      String?//should add a gender field
  //gender        String?        //should add
  provider      String         @default("email")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  balance       Float          @default(0.0)
  isBanned      Boolean        @default(false)
  isVerified    Boolean        @default(false)
  creditCards   CreditCard[]   // Relation field
  transactions  Transaction[]  // Relation field
}

model CreditCard {
  id              String    @id @default(uuid()) // Primary key
  holder          String
  number          String    @unique
  cvv             String
  expirationDate  DateTime
  isBlocked       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  ownerId         String    // Foreign key
  user            User      @relation(fields: [ownerId], references: [id], onDelete: Cascade) // Relation field
}

model Transaction {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    // Foreign key
  amount      Float
  receiverId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
